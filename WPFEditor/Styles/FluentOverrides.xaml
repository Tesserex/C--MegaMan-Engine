<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MegaMan.Editor"
                    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent">

    <ControlTemplate x:Key="BackstageTabItemControlOverride"
                     TargetType="{x:Type Fluent:BackstageTabItem}">
        <Grid Background="#00000000">
            <Border x:Name="hoverBorder"
                    Margin="0,0,0,0"
                    Visibility="Collapsed">
                <Polygon VerticalAlignment="Center" Margin="12,0,0,0" Points="0,0 6,6, 0,12" Stroke="{StaticResource NesRedBrush}" Fill="{StaticResource NesRedBrush}" />
            </Border>
            <ContentControl x:Name="PART_Header"
                            Foreground="White"
                            Margin="25,0,15,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontFamily="../Resources/#Mega Man 10"
                            Content="{TemplateBinding Header}">
                <ContentControl.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping"
                                Value="NoWrap" />
                        <Setter Property="TextTrimming"
                                Value="CharacterEllipsis" />
                    </Style>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="Selector.IsSelected"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="hoverBorder"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="PART_Header"
                        Property="Foreground"
                        Value="White" />
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="hoverBorder"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
                <Setter TargetName="PART_Header"
                        Property="Foreground"
                        Value="{StaticResource ActiveBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Fluent:BackstageTabItem}">
        <Setter Property="Template"
                Value="{DynamicResource BackstageTabItemControlOverride}" />
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Height"
                Value="38" />
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:BackstageTabControl}}}" />
        <Setter Property="Margin"
                Value="0" />
    </Style>
    
    <ControlTemplate x:Key="BackstageButtonControlOverride"
                     TargetType="{x:Type Fluent:Button}">
        <Grid Background="#00000000">
            <Polygon x:Name="arrow" Visibility="Hidden" VerticalAlignment="Center" Margin="12,0,0,0" Points="0,0 6,6, 0,12" Stroke="{StaticResource NesRedBrush}" Fill="{StaticResource NesRedBrush}" />
            <StackPanel Orientation="Horizontal"
                        Margin="25,0,15,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                <TextBlock Text="{TemplateBinding Header}"
                           FontFamily="../Resources/#Mega Man 10"
                           TextWrapping="NoWrap"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           TextTrimming="CharacterEllipsis"
                           x:Name="controlLabel" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsEnabled"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="arrow"
                        Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        TargetName="controlLabel"
                        Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BackstageButtonOverride"
           TargetType="{x:Type Fluent:Button}">
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Height"
                Value="38" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Template"
                Value="{DynamicResource BackstageButtonControlOverride}" />
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:BackstageTabControl}}, FallbackValue=Red}" />
        <Setter Property="Foreground"
                Value="{DynamicResource BackstageFontBrush}" />
    </Style>

    <ControlTemplate x:Key="BackstageBackButtonOverride"
                     TargetType="Button">
        <Grid x:Name="ContentGrid"
              Fluent:FrameworkHelper.UseLayoutRounding="False">
            <Path x:Name="arrowpath"
                  Width="16"
                  Height="12"
                  Stretch="Uniform"
                  Fill="White"
                  Data="F1 M 36,22L 36,26L 19.75,26L 27,33L 20.5,33L 11,24L 20.5,15L 27,15L 19.75,22L 36,22 Z " />

            <Rectangle x:Name="backrect"
                     Stroke="White"
                     Height="35"
                     Width="35"
                     StrokeThickness="2" />

            <Path Data="M0,0 C0,35 0,35 0,35 C0,35 35,35 35,35 L35,0 z"
                  Fill="Transparent"
                  HorizontalAlignment="Stretch"
                  Margin="0"
                  Stretch="None"
                  Width="Auto" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Opacity"
                        TargetName="arrowpath"
                        Value="0.5" />
                <Setter Property="Opacity"
                        TargetName="backrect"
                        Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BackstageBackButtonStyleOverride"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="35" />
        <Setter Property="Width"
                Value="35" />
        <Setter Property="Template"
                Value="{DynamicResource BackstageBackButtonOverride}" />
    </Style>

    <ControlTemplate x:Key="BackstageControlOverride"
                     TargetType="{x:Type Fluent:BackstageTabControl}">
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <Style x:Key="{x:Type Fluent:Button}"
                       TargetType="{x:Type Fluent:Button}"
                       BasedOn="{StaticResource BackstageButtonOverride}" />
                <Style x:Key="{x:Type ScrollBar}"
                       TargetType="{x:Type ScrollBar}"
                       BasedOn="{StaticResource ScrollBarWhite}" />
                <Style x:Key="{x:Type Fluent:DropDownButton}"
                       TargetType="{x:Type Fluent:DropDownButton}"
                       BasedOn="{StaticResource DropDownButtonBackstageStyle}" />
                <Style x:Key="{x:Type Fluent:ComboBox}"
                       TargetType="{x:Type Fluent:ComboBox}"
                       BasedOn="{StaticResource ComboBoxBackstageStyle}" />
                <Style x:Key="{x:Type Fluent:Spinner}"
                       TargetType="{x:Type Fluent:Spinner}"
                       BasedOn="{StaticResource SpinnerBackstageStyle}" />
                <Style TargetType="{x:Type Fluent:SeparatorTabItem}"
                       BasedOn="{StaticResource BackstageSeparatorTabItemStyle}" />
                <Storyboard x:Key="OnIsOpenTrueStoryboard">
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                      Storyboard.TargetName="grid">
                        <EasingThicknessKeyFrame KeyTime="0"
                                                 Value="-125,0,0,0" />
                        <EasingThicknessKeyFrame KeyTime="0:0:0.5"
                                                 Value="0">
                            <EasingThicknessKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseOut" />
                            </EasingThicknessKeyFrame.EasingFunction>
                        </EasingThicknessKeyFrame>
                    </ThicknessAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="OnIsOpenFalseStoryboard">
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                      Storyboard.TargetName="grid">
                        <EasingThicknessKeyFrame KeyTime="0"
                                                 Value="0" />
                        <EasingThicknessKeyFrame KeyTime="0:0:0.3"
                                                 Value="-125,0,0,0">
                            <EasingThicknessKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseOut" />
                            </EasingThicknessKeyFrame.EasingFunction>
                        </EasingThicknessKeyFrame>
                    </ThicknessAnimationUsingKeyFrames>
                </Storyboard>
            </ResourceDictionary>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="125"
                                  Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid VerticalAlignment="Stretch"
                  Background="{TemplateBinding ItemsPanelBackground}">
                <Fluent:WindowSteeringHelperControl Height="{Binding SelectedContentMargin.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                                    VerticalAlignment="Top"
                                                    IsEnabled="{TemplateBinding IsWindowSteeringHelperEnabled}" />

                <Button x:Name="backbutton"
                        Style="{DynamicResource BackstageBackButtonStyleOverride}"
                        Command="{x:Static Fluent:RibbonCommands.OpenBackstage}"
                        Margin="22,19,0,0"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left">
                </Button>

                <ItemsPresenter Margin="0,69,0,0"
                                Height="Auto" />
            </Grid>

            <Grid Height="Auto"
                  Grid.Column="1"
                  Background="{TemplateBinding Background}"
                  Margin="{TemplateBinding SelectedContentMargin}">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style x:Key="{x:Type Fluent:Button}"
                               TargetType="{x:Type Fluent:Button}"
                               BasedOn="{StaticResource BackstageButtonOverride}" />
                    </ResourceDictionary>
                </Grid.Resources>
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Height="Auto"
                                  Grid.Column="1"
                                  ContentSource="SelectedContent" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ParentBackstage.IsOpen, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding ParentBackstage.IsOpenAnimationEnabled, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="IsOpenBeginStoryboard"
                                     Storyboard="{StaticResource OnIsOpenTrueStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="IsOpenBeginStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ParentBackstage.IsOpen, RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding ParentBackstage.IsOpenAnimationEnabled, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="IsClosedBeginStoryboard"
                                     Storyboard="{StaticResource OnIsOpenFalseStoryboard}" />
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="IsClosedBeginStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Fluent:BackstageTabControl}">
        <Setter Property="Template" Value="{StaticResource BackstageControlOverride}" />
        <Setter Property="Background"
                Value="{StaticResource AccentBackgroundBrush}" />
        <Setter Property="ItemsPanelBackground"
                Value="Black" />
    </Style>

    <Style TargetType="{x:Type Fluent:RibbonTitleBar}">
        <Setter Property="Template"
                Value="{DynamicResource RibbonTitleBarControlOverride}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="-2,0"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Stretch"
                               Text="{Binding}"
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RibbonTitleBarControlOverride"
                     TargetType="{x:Type Fluent:RibbonTitleBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="0" x:Name="PART_HeaderHolder"
                              HorizontalAlignment="Left"
                              ContentSource="Header" />

            <Fluent:RibbonContextualGroupsContainer Grid.Column="1" x:Name="PART_ItemsContainer"                                                    
                                                    IsItemsHost="True" />

            <ContentPresenter x:Name="PART_QuickAccessToolbarHolder"
                              ContentSource="QuickAccessToolBar" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCollapsed"
                     Value="True">
                <Setter Property="Visibility"
                        Value="Collapsed"
                        TargetName="PART_ItemsContainer" />
            </Trigger>
            <Trigger Property="HideContextTabs"
                     Value="True">
                <Setter Property="Visibility"
                        Value="Collapsed"
                        TargetName="PART_ItemsContainer" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>